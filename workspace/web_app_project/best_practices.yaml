
# Next.js 15 Best Practices and Setup Commands

setup_commands:
  - name: "Create Next.js Project"
    command: "npx create-next-app@latest . --typescript --tailwind --eslint --app --src-dir --import-alias '@/*'"
    description: "Initialize a new Next.js 15 project with TypeScript, Tailwind CSS, ESLint, and App Router"

  - name: "Install Core Dependencies"
    command: "npm install @radix-ui/react-icons @radix-ui/themes class-variance-authority clsx tailwind-merge"
    description: "Install essential UI and utility libraries"

  - name: "Install Development Dependencies"
    command: "npm install -D @types/node @types/react @types/react-dom @typescript-eslint/eslint-plugin @typescript-eslint/parser prettier prettier-plugin-tailwindcss"
    description: "Install development and type dependencies"

coding_standards:
  typescript:
    - "Use strict TypeScript configuration"
    - "Enable all strict type checking options"
    - "Use interface for object types"
    - "Use type for union types and primitives"
    - "Always specify return types for functions"

  react:
    - "Use functional components with hooks"
    - "Implement proper error boundaries"
    - "Use React.Suspense for code splitting"
    - "Implement proper loading states"
    - "Use proper state management patterns"

  nextjs:
    - "Use App Router for routing"
    - "Implement proper metadata"
    - "Use Server Components by default"
    - "Use Client Components when needed"
    - "Implement proper caching strategies"

  tailwind:
    - "Use consistent color palette"
    - "Implement proper responsive design"
    - "Use proper component composition"
    - "Follow utility-first approach"
    - "Use proper theme configuration"

testing:
  setup:
    - name: "Install Testing Dependencies"
      command: "npm install -D jest @testing-library/react @testing-library/jest-dom @testing-library/user-event jest-environment-jsdom"
      description: "Install testing framework and utilities"

  configuration:
    - "Configure Jest for TypeScript"
    - "Set up testing environment"
    - "Configure test coverage thresholds"
    - "Set up test utilities"
    - "Configure test runners"

deployment:
  vercel:
    - "Configure Vercel deployment"
    - "Set up environment variables"
    - "Configure build settings"
    - "Set up preview deployments"
    - "Configure custom domains"

  github:
    - "Set up GitHub Actions"
    - "Configure CI/CD pipeline"
    - "Set up automated testing"
    - "Configure deployment triggers"
    - "Set up security scanning"
